(()=>{"use strict";const e={"fill-field-1":"nome","fill-field-2":"cpf","fill-field-3":"documento","fill-field-4":"condutor_repetido","fill-field-5":"funcionario"};function o(e){return{nome:"Nome",cpf:"CPF",documento:"Documento",condutor_repetido:"Condutor",funcionario:"Funcionário"}[e]||e}chrome.commands.onCommand.addListener(async o=>{console.log("Comando recebido:",o);const t=e[o];if(t)try{const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!e.id)return;const o=(await chrome.storage.local.get(["extensionState"])).extensionState;if(!o||!o.isEditing||!o.selectedTemplate)return void console.log("Não está em modo de edição ou template não selecionado");chrome.tabs.sendMessage(e.id,{type:"GET_SELECTED_TEXT",fieldId:t})}catch(e){console.error("Erro ao processar comando:",e)}}),chrome.runtime.onMessage.addListener((e,t,n)=>{switch(console.log("Mensagem recebida no background:",e),e.type){case"FILL_FIELD":!async function(e){try{const{fieldId:t,text:n}=e,i=(await chrome.storage.local.get(["extensionState"])).extensionState||{};if(!i.selectedTemplate)return void console.error("Nenhum template selecionado");const c={...i.filledFields,[t]:n.trim()};"nome"===t&&(c.condutor_repetido=n.trim());const a={...i,filledFields:c};await chrome.storage.local.set({extensionState:a}),console.log(`Campo ${t} preenchido com: ${n}`),chrome.notifications.create({type:"basic",iconUrl:"icons/icon48.png",title:"Campo Preenchido",message:`${o(t)}: ${n.substring(0,50)}${n.length>50?"...":""}`})}catch(e){console.error("Erro ao preencher campo:",e)}}(e.payload);break;case"GET_STATE":return chrome.storage.local.get(["extensionState"],e=>{n(e.extensionState||null)}),!0;case"UPDATE_STATE":chrome.storage.local.set({extensionState:e.payload})}}),chrome.runtime.onInstalled.addListener(()=>{console.log("Extensão instalada"),chrome.storage.local.set({extensionState:{selectedTemplate:null,filledFields:{},isEditing:!1,employees:[],selectedEmployee:null}})}),chrome.runtime.onStartup.addListener(()=>{console.log("Extensão iniciada")})})();